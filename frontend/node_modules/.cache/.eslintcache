[{"/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/index.js":"1","/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/reportWebVitals.js":"2","/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/App.js":"3","/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/Header.js":"4","/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/Main.js":"5","/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/Footer.js":"6","/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/Login.js":"7","/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/EditAvatarPopup.js":"8","/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/Register.js":"9","/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/AddPlacePopup.js":"10","/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/EditProfilePopup.js":"11","/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/ImagePopup.js":"12","/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/ProtectedRoute.js":"13","/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/InfoTooltip.js":"14","/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/utils/api.js":"15","/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/utils/auth.js":"16","/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/contexts/CurrentUserContext.js":"17","/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/Card.js":"18","/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/PopupWithForm.js":"19"},{"size":644,"mtime":1684143539747,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1684143539747,"results":"22","hashOfConfig":"21"},{"size":7819,"mtime":1684143539737,"results":"23","hashOfConfig":"21"},{"size":596,"mtime":1684143539737,"results":"24","hashOfConfig":"21"},{"size":1751,"mtime":1684143539738,"results":"25","hashOfConfig":"21"},{"size":230,"mtime":1684143539737,"results":"26","hashOfConfig":"21"},{"size":1479,"mtime":1684143539737,"results":"27","hashOfConfig":"21"},{"size":1070,"mtime":1684143539737,"results":"28","hashOfConfig":"21"},{"size":1781,"mtime":1684143539738,"results":"29","hashOfConfig":"21"},{"size":1559,"mtime":1684143539736,"results":"30","hashOfConfig":"21"},{"size":2040,"mtime":1684143539737,"results":"31","hashOfConfig":"21"},{"size":553,"mtime":1684143539737,"results":"32","hashOfConfig":"21"},{"size":233,"mtime":1684143539738,"results":"33","hashOfConfig":"21"},{"size":1013,"mtime":1684143539737,"results":"34","hashOfConfig":"21"},{"size":2277,"mtime":1684143539747,"results":"35","hashOfConfig":"21"},{"size":926,"mtime":1684143539748,"results":"36","hashOfConfig":"21"},{"size":117,"mtime":1684143539738,"results":"37","hashOfConfig":"21"},{"size":1814,"mtime":1684143539737,"results":"38","hashOfConfig":"21"},{"size":721,"mtime":1684143539738,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5cmko2",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/index.js",[],[],"/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/reportWebVitals.js",[],[],"/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/App.js",["100","101","102","103"],[],"import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport { Routes, Route, useNavigate, useLocation } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport * as auth from \"../utils/auth\";\nimport InfoTooltip from \"./InfoTooltip\";\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const INITIAL_USER = { email: \"\", password: \"\" };\n  const [userData, setUserData] = useState(INITIAL_USER);\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [infoPopup, setInfoPopup] = useState({\n    isOpenLoginPopup: false,\n    status: false,\n    message: \"\",\n  });\n  function handleInfoPopup() {\n    setInfoPopup(true);\n  }\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleCardClick(selectedCard) {\n    setSelectedCard(selectedCard);\n  }\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n    setInfoPopup(false);\n  }\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    api\n      .changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) =>\n          state.map((c) => (c._id === card._id ? newCard : c))\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  function handleCardDelete(card) {\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        const newCards = cards.filter((c) => c._id !== card._id);\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleUpdateUser(user) {\n    api\n      .editProfile(user)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleUpdateAvatar(user) {\n    api\n      .editAvatar(user)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleAddPlaceSubmit(data) {\n    api\n      .addCard(data)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  useEffect(() => {\n    if (loggedIn) {\n      Promise.all([api.getUserInfo(), api.getImages()])\n        .then(([data, card]) => {\n          setCurrentUser(data);\n          setCards(card);\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [loggedIn]);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"jwt\");\n    if (token) {\n      cbTokenCheck(location.pathname);\n    }\n  }, [location.pathname]);\n\n  const cbTokenCheck = () => {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (jwt) {\n      auth\n        .checkToken(jwt)\n        .then((res) => {\n          if (res) {\n            setLoggedIn(true);\n            setUserData(res.data.email);\n            navigate(\"/\");\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  const openPopup = () => {\n    setInfoPopup((prevState) => ({\n      ...prevState,\n      isOpenLoginPopup: true,\n    }));\n  };\n\n  const closePopup = () => {\n    setInfoPopup((prevState) => ({\n      ...prevState,\n      isOpenLoginPopup: false,\n    }));\n    if (infoPopup.status) navigate(\"/sign-in\");\n  };\n\n  const cbRegister = (email, password) => {\n    auth\n      .register(email, password)\n      .then((res) => {\n        if (res) {\n          setInfoPopup({\n            message: \"Успешно зарегистрировались\",\n            status: true,\n            isOpenLoginPopup: false,\n          });\n          openPopup();\n          navigate(\"/\");\n        }\n      })\n      .catch((err) => {\n        setInfoPopup({\n          message: \"Что-то пошло не так!\",\n          status: false,\n          isOpenLoginPopup: false,\n        });\n        openPopup();\n      });\n  };\n\n  const cbLogin = (email, password) => {\n    auth\n      .authorize(email, password)\n      .then((res) => {\n        if (res.token) {\n          setUserData(email);\n          setLoggedIn(true);\n          localStorage.setItem(\"jwt\", res.token);\n          navigate(\"/\");\n        }\n      })\n      .catch((err) => {\n        setInfoPopup({\n          message: \"Что-то пошло не так!\",\n          status: false,\n          isOpenLoginPopup: false,\n        });\n        openPopup();\n        console.log(err);\n      });\n  };\n\n  const cbLogout = (e) => {\n    e.preventDefault();\n    localStorage.removeItem(\"jwt\");\n    setLoggedIn(false);\n    setUserData(\"\");\n    navigate(\"/sign-in\");\n  };\n\n  return (\n    <div className=\"root\">\n      <CurrentUserContext.Provider value={{ currentUser, cards }}>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <ProtectedRoute loggedIn={loggedIn}>\n                <>\n                  <Header\n                    nav={\"/sign-in\"}\n                    navStatus={\"Выйти\"}\n                    emailUser={userData}\n                    onLogout={cbLogout}\n                  />\n                  <Main\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onEditAvatar={handleEditAvatarClick}\n                    onCardClick={handleCardClick}\n                    onCardLike={handleCardLike}\n                    onCardDelete={handleCardDelete}\n                  />\n                  <Footer />\n                  <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser}\n                  />\n                  <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlaceSubmit}\n                  />\n                  <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar}\n                  />\n                  <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n                </>\n              </ProtectedRoute>\n            }\n          />\n          <Route\n            path=\"/sign-up\"\n            element={<Register onRegister={cbRegister} isLoggedIn={loggedIn} />}\n          />\n          <Route\n            path=\"/sign-in\"\n            element={<Login onLogin={cbLogin} isLoggedIn={loggedIn} />}\n          />\n        </Routes>\n      </CurrentUserContext.Provider>\n      {infoPopup.isOpenLoginPopup && (\n        <InfoTooltip status={infoPopup.status} onClose={closePopup} />\n      )}\n    </div>\n  );\n}\nexport default App;\n","/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/Header.js",[],[],"/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/Main.js",["104","105"],[],"import React from \"react\";\nimport { useEffect, useContext } from \"react\";\nimport { api } from \"../utils/api\";\nimport Card from \"./Card\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction Main({\n  onEditAvatar,\n  onEditProfile,\n  onAddPlace,\n  onCardClick,\n  onCardLike,\n  onCardDelete,\n\n}) {\n  const { currentUser, cards } = useContext(CurrentUserContext);\n  const { name, about, avatar } = currentUser;\n  return (\n    <main className=\"content\">\n      <section className=\"profile root__profile\">\n        <div\n          style={{ backgroundImage: `url(${avatar})` }}\n          className=\"profile__avatar\"\n          name=\"avatar\"\n          alt={name}\n        />\n        <button\n          className=\"profile__avatar-edit\"\n          onClick={onEditAvatar}\n        ></button>\n        <div className=\"profile__info\">\n          <div>\n            <h1 className=\"profile__name\">{name}</h1>\n            <p className=\"profile__text\">{about}</p>\n          </div>\n          <button\n            className=\"profile__edit\"\n            onClick={onEditProfile}\n            type=\"button\"\n            aria-label=\"edit\"\n          ></button>\n        </div>\n        <button\n          className=\"profile__add\"\n          onClick={onAddPlace}\n          type=\"button\"\n          aria-label=\"add\"\n        ></button>\n      </section>\n      <section className=\"elements\">\n        {cards.map((card) => (\n          <Card\n            name={card.name}\n            link={card.link}\n            like={card.likes}\n            key={card._id}\n            onCardClick={onCardClick}\n            onCardLike={onCardLike}\n            card={card}\n            onCardDelete={onCardDelete}\n          />\n        ))}\n      </section>\n    </main>\n  );\n}\nexport default Main;\n","/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/Footer.js",[],[],"/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/Login.js",[],[],"/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/EditAvatarPopup.js",[],[],"/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/Register.js",[],[],"/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/AddPlacePopup.js",[],[],"/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/EditProfilePopup.js",[],[],"/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/ImagePopup.js",[],[],"/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/ProtectedRoute.js",[],[],"/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/InfoTooltip.js",[],[],"/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/utils/api.js",["106","107"],[],"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка ${res.status}`);\n    }\n  }\n  getUserInfo = () => {\n    return fetch(this._baseUrl + \"/users/me\", {\n      headers: this._headers,\n    }).\n    then(this._checkResponse);\n  };\n\n  getImages = () => {\n    return fetch(this._baseUrl + \"/cards\", {\n      headers: this._headers,\n    })\n    .then(this._checkResponse);\n  };\n\n  addCard = (data) => {\n    return fetch(this._baseUrl + \"/cards\", {\n      method: \"POST\",\n      headers: this._headers,\n\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link,\n      }),\n    })\n    .then(this._checkResponse);\n  };\n\n  deleteCard = (_id) => {\n    return fetch(this._baseUrl + \"/cards/\" + _id, {\n      headers: this._headers,\n      method: \"DELETE\",\n    })\n    .then(this._checkResponse);\n  };\n\n  editProfile = (data) => {\n    return fetch(this._baseUrl + \"/users/me\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    })\n    .then(this._checkResponse);\n  };\n\n  putLike(_id) {\n    return fetch(this._baseUrl + \"/cards/likes/\" + _id, {\n      headers: this._headers,\n      method: \"PUT\",\n    }).then(this._checkResponse);\n  }\n\n  deleteLike(_id) {\n    return fetch(this._baseUrl + \"/cards/likes/\" + _id, {\n      headers: this._headers,\n      method: \"DELETE\",\n    })\n    .then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(_id, isLiked) {\n    return fetch(`${this._baseUrl}/cards/${_id}/likes`, {\n      method: `${isLiked ? \"PUT\" : \"DELETE\"}`,\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n  editAvatar = (data) => {\n    return fetch(this._baseUrl + \"/users/me/avatar\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar,\n      }),\n    }).then(this._checkResponse);\n  };\n}\n\n const api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-59\",\n  headers: {\n    authorization: \"510ed949-2f9c-4a1e-b028-07a35bd485cd\",\n    \"Content-Type\": \"application/json\",\n  },\n});\nexport default api \n","/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/utils/auth.js",[],[],"/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/contexts/CurrentUserContext.js",[],[],"/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/Card.js",[],[],"/Users/mariailina/Documents/Praktikum/react-mesto-auth/src/components/PopupWithForm.js",[],[],{"ruleId":"108","severity":1,"message":"109","line":27,"column":10,"nodeType":"110","messageId":"111","endLine":27,"endColumn":17},{"ruleId":"108","severity":1,"message":"112","line":27,"column":19,"nodeType":"110","messageId":"111","endLine":27,"endColumn":29},{"ruleId":"108","severity":1,"message":"113","line":35,"column":12,"nodeType":"110","messageId":"111","endLine":35,"endColumn":27},{"ruleId":"114","severity":1,"message":"115","line":134,"column":6,"nodeType":"116","endLine":134,"endColumn":25,"suggestions":"117"},{"ruleId":"108","severity":1,"message":"118","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":19},{"ruleId":"108","severity":1,"message":"119","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":8,"column":5,"nodeType":"122","messageId":"123","endLine":13,"endColumn":6},{"ruleId":"124","severity":1,"message":"125","line":18,"column":7,"nodeType":"126","messageId":"127","endLine":18,"endColumn":8,"fix":"128"},"no-unused-vars","'message' is assigned a value but never used.","Identifier","unusedVar","'setMessage' is assigned a value but never used.","'handleInfoPopup' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cbTokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["129"],"'useEffect' is defined but never used.","'api' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"130","text":"131"},{"desc":"132","fix":"133"},[372,378],"\n    .","Update the dependencies array to be: [cbTokenCheck, location.pathname]",{"range":"134","text":"135"},[3754,3773],"[cbTokenCheck, location.pathname]"]