{"ast":null,"code":"class Api {\n  constructor(options) {\n    this.getUserInfo = () => {\n      return fetch(this._baseUrl + \"/users/me\", {\n        headers: this._headers\n      }).then(this._checkResponse);\n    };\n    this.getImages = () => {\n      return fetch(this._baseUrl + \"/cards\", {\n        headers: this._headers\n      }).then(this._checkResponse);\n    };\n    this.addCard = data => {\n      return fetch(this._baseUrl + \"/cards\", {\n        method: \"POST\",\n        headers: this._headers,\n        body: JSON.stringify({\n          name: data.name,\n          link: data.link\n        })\n      }).then(this._checkResponse);\n    };\n    this.deleteCard = _id => {\n      return fetch(this._baseUrl + \"/cards/\" + _id, {\n        headers: this._headers,\n        method: \"DELETE\"\n      }).then(this._checkResponse);\n    };\n    this.editProfile = data => {\n      return fetch(this._baseUrl + \"/users/me\", {\n        method: \"PATCH\",\n        headers: this._headers,\n        body: JSON.stringify({\n          name: data.name,\n          about: data.about\n        })\n      }).then(this._checkResponse);\n    };\n    this.editAvatar = data => {\n      return fetch(this._baseUrl + \"/users/me/avatar\", {\n        method: \"PATCH\",\n        headers: this._headers,\n        body: JSON.stringify({\n          avatar: data.avatar\n        })\n      }).then(this._checkResponse);\n    };\n    this._baseUrl = options.baseUrl;\n    // this._headers = options.headers;\n    this._token = options;\n  }\n  _checkResponse(res) {\n    {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка ${res.status}`);\n    }\n  }\n  putLike(_id) {\n    return fetch(this._baseUrl + \"/cards/likes/\" + _id, {\n      headers: this._headers,\n      method: \"PUT\"\n    }).then(this._checkResponse);\n  }\n  deleteLike(_id) {\n    return fetch(this._baseUrl + \"/cards/likes/\" + _id, {\n      headers: this._headers,\n      method: \"DELETE\"\n    }).then(this._checkResponse);\n  }\n  changeLikeCardStatus(_id, isLiked) {\n    return fetch(`${this._baseUrl}/cards/${_id}/likes`, {\n      method: `${isLiked ? \"PUT\" : \"DELETE\"}`,\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://localhost:3002\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","getUserInfo","fetch","_baseUrl","headers","_headers","then","_checkResponse","getImages","addCard","data","method","body","JSON","stringify","name","link","deleteCard","_id","editProfile","about","editAvatar","avatar","baseUrl","_token","res","ok","json","Promise","reject","status","putLike","deleteLike","changeLikeCardStatus","isLiked","api"],"sources":["/Users/mariailina/Documents/Praktikum/react-mesto-api-full-gha/frontend/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    // this._headers = options.headers;\n    this._token = options\n  }\n\n  _checkResponse(res) {\n    {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка ${res.status}`);\n    }\n  }\n  getUserInfo = () => {\n    return fetch(this._baseUrl + \"/users/me\", {\n      headers: this._headers,\n    }).\n    then(this._checkResponse);\n  };\n\n  getImages = () => {\n    return fetch(this._baseUrl + \"/cards\", {\n      headers: this._headers,\n    })\n    .then(this._checkResponse);\n  };\n\n  addCard = (data) => {\n    return fetch(this._baseUrl + \"/cards\", {\n      method: \"POST\",\n      headers: this._headers,\n\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link,\n      }),\n    })\n    .then(this._checkResponse);\n  };\n\n  deleteCard = (_id) => {\n    return fetch(this._baseUrl + \"/cards/\" + _id, {\n      headers: this._headers,\n      method: \"DELETE\",\n    })\n    .then(this._checkResponse);\n  };\n\n  editProfile = (data) => {\n    return fetch(this._baseUrl + \"/users/me\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    })\n    .then(this._checkResponse);\n  };\n\n  putLike(_id) {\n    return fetch(this._baseUrl + \"/cards/likes/\" + _id, {\n      headers: this._headers,\n      method: \"PUT\",\n    }).then(this._checkResponse);\n  }\n\n  deleteLike(_id) {\n    return fetch(this._baseUrl + \"/cards/likes/\" + _id, {\n      headers: this._headers,\n      method: \"DELETE\",\n    })\n    .then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(_id, isLiked) {\n    return fetch(`${this._baseUrl}/cards/${_id}/likes`, {\n      method: `${isLiked ? \"PUT\" : \"DELETE\"}`,\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n  editAvatar = (data) => {\n    return fetch(this._baseUrl + \"/users/me/avatar\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar,\n      }),\n    }).then(this._checkResponse);\n  };\n}\n\n const api = new Api({\n  baseUrl: \"https://localhost:3002\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\nexport default api \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}