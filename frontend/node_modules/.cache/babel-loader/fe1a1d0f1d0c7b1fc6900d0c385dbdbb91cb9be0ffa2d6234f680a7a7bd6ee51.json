{"ast":null,"code":"export const BASE_URL = \"https://localhost:3002\";\n// export const BASE_URL = 'http://localhost:3002';\n\nconst checkResponse = response => response.ok ? response.json() : Promise.reject(`${response.status}`);\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => checkResponse(response)).then(res => {\n    return res;\n  });\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => checkResponse(response)).then(data => {\n    if (data.token) {\n      localStorage.setItem('token', data.token);\n      return data;\n    }\n  });\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(response => checkResponse(response)).then(data => data);\n};","map":{"version":3,"names":["BASE_URL","checkResponse","response","ok","json","Promise","reject","status","register","email","password","fetch","method","headers","body","JSON","stringify","then","res","authorize","data","token","localStorage","setItem","checkToken"],"sources":["/Users/mariailina/Documents/Praktikum/react-mesto-api-full-gha/frontend/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = \"https://localhost:3002\";\n// export const BASE_URL = 'http://localhost:3002';\n\nconst checkResponse = response => response.ok ? response.json() : Promise.reject(`${response.status}`);\n  \nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ email, password}),\n  })\n  .then(response => checkResponse(response))\n  .then((res) => {\n    return res;\n  })\n}\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ email,password})\n  })\n  .then(response => checkResponse(response))\n  .then((data) => {\n    if (data.token){\n      localStorage.setItem('token', data.token);\n      return data;\n    }\n  })\n}; \n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\" : `Bearer ${token}`\n    }\n  })\n  .then(response => checkResponse(response))\n  .then(data => data)\n}\n\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,wBAAwB;AAChD;;AAEA,MAAMC,aAAa,GAAGC,QAAQ,IAAIA,QAAQ,CAACC,EAAE,GAAGD,QAAQ,CAACE,IAAI,EAAE,GAAGC,OAAO,CAACC,MAAM,CAAE,GAAEJ,QAAQ,CAACK,MAAO,EAAC,CAAC;AAEtG,OAAO,MAAMC,QAAQ,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAEC;IAAQ,CAAC;EACzC,CAAC,CAAC,CACDO,IAAI,CAACf,QAAQ,IAAID,aAAa,CAACC,QAAQ,CAAC,CAAC,CACzCe,IAAI,CAAEC,GAAG,IAAK;IACb,OAAOA,GAAG;EACZ,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGA,CAACV,KAAK,EAAEC,QAAQ,KAAK;EAC5C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAACC;IAAQ,CAAC;EACxC,CAAC,CAAC,CACDO,IAAI,CAACf,QAAQ,IAAID,aAAa,CAACC,QAAQ,CAAC,CAAC,CACzCe,IAAI,CAAEG,IAAI,IAAK;IACd,IAAIA,IAAI,CAACC,KAAK,EAAC;MACbC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACC,KAAK,CAAC;MACzC,OAAOD,IAAI;IACb;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMI,UAAU,GAAIH,KAAK,IAAK;EACnC,OAAOV,KAAK,CAAE,GAAEX,QAAS,WAAU,EAAE;IACnCY,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAI,UAASQ,KAAM;IACpC;EACF,CAAC,CAAC,CACDJ,IAAI,CAACf,QAAQ,IAAID,aAAa,CAACC,QAAQ,CAAC,CAAC,CACzCe,IAAI,CAACG,IAAI,IAAIA,IAAI,CAAC;AACrB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}