{"ast":null,"code":"export const BASE_URL = \"http://localhost:3006\";\n\n// function makeRequest(url, method, body, token) {\n//   const headers = {\n//     \"Accept\": \"application/json\",\n//     \"Content-Type\": \"application/json\",\n//   };\n\n//   if (token !== undefined) {\n//     headers[\"Authorization\"] = `Bearer ${token}`;\n//   }\n\n//   const config = {\n//     method,\n//     headers,\n\n//   };\n\n//   if (body !== undefined) {\n//     config.body = JSON.stringify(body);\n//   }\n//   return fetch(`${BASE_URL}${url}`, config)\n//   .then((res) => {\n//     if (!res.ok) {\n//       return Promise.reject(`Ошибка: ${res.status}`);\n//     }\n//     console.log('res=>!!!', res);\n//     return res.json();\n//   });\n// }\n\n// export const register = (email, password) => {\n//   return makeRequest(\"/signup\", \"POST\", { email, password } );\n// };\n\n// export const authorize = (email, password) => {\n//   return makeRequest(\"/signin\", \"POST\", { email, password });\n// };\n\n// export const checkToken = (token) => {\n//   return makeRequest(\"/users/me\", \"GET\", undefined, token);\n// };\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => {\n    return response.json();\n  }).then(res => {\n    return res;\n  }).catch(err => console.log(err));\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => res.json()).then(data => data).catch(err => console.log(err));\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => res.json()).then(data => data);\n};","map":{"version":3,"names":["BASE_URL","register","email","password","fetch","method","headers","credentials","body","JSON","stringify","then","response","json","res","catch","err","console","log","authorize","data","checkToken","token"],"sources":["/Users/mariailina/Documents/Praktikum/react-mesto-api-full-gha/frontend/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = \"http://localhost:3006\";\n\n// function makeRequest(url, method, body, token) {\n//   const headers = {\n//     \"Accept\": \"application/json\",\n//     \"Content-Type\": \"application/json\",\n//   };\n\n//   if (token !== undefined) {\n//     headers[\"Authorization\"] = `Bearer ${token}`;\n//   }\n\n//   const config = {\n//     method,\n//     headers,\n  \n//   };\n\n//   if (body !== undefined) {\n//     config.body = JSON.stringify(body);\n//   }\n//   return fetch(`${BASE_URL}${url}`, config)\n//   .then((res) => {\n//     if (!res.ok) {\n//       return Promise.reject(`Ошибка: ${res.status}`);\n//     }\n//     console.log('res=>!!!', res);\n//     return res.json();\n//   });\n// }\n\n// export const register = (email, password) => {\n//   return makeRequest(\"/signup\", \"POST\", { email, password } );\n// };\n\n// export const authorize = (email, password) => {\n//   return makeRequest(\"/signin\", \"POST\", { email, password });\n// };\n\n// export const checkToken = (token) => {\n//   return makeRequest(\"/users/me\", \"GET\", undefined, token);\n// };\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify({email, password})\n  })\n  .then((response) => {\n    return response.json();\n  })\n  .then((res) => {\n    return res;\n  })\n  .catch((err) => console.log(err));\n};\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n    credentials: 'include',\n      body: JSON.stringify({email, password})\n    })\n    .then(res => res.json())\n    .then(data => data)\n    .catch(err => console.log(err))\n  };\n\n  export const checkToken = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      }\n    })\n    .then(res => res.json())\n    .then(data => data)\n  }\n  \n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,uBAAuB;;AAE/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,MAAMC,QAAQ,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IAClB,CAAC;IACDC,WAAW,EAAE,SAAS;IACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACR,KAAK;MAAEC;IAAQ,CAAC;EACxC,CAAC,CAAC,CACDQ,IAAI,CAAEC,QAAQ,IAAK;IAClB,OAAOA,QAAQ,CAACC,IAAI,EAAE;EACxB,CAAC,CAAC,CACDF,IAAI,CAAEG,GAAG,IAAK;IACb,OAAOA,GAAG;EACZ,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACnC,CAAC;AAED,OAAO,MAAMG,SAAS,GAAGA,CAACjB,KAAK,EAAEC,QAAQ,KAAK;EAC1C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IAClB,CAAC;IACHC,WAAW,EAAE,SAAS;IACpBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACR,KAAK;MAAEC;IAAQ,CAAC;EACxC,CAAC,CAAC,CACDQ,IAAI,CAACG,GAAG,IAAIA,GAAG,CAACD,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACS,IAAI,IAAIA,IAAI,CAAC,CAClBL,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACjC,CAAC;AAED,OAAO,MAAMK,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAOlB,KAAK,CAAE,GAAEJ,QAAS,WAAU,EAAE;IACnCK,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,UAASgB,KAAM;IACnC;EACF,CAAC,CAAC,CACDX,IAAI,CAACG,GAAG,IAAIA,GAAG,CAACD,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACS,IAAI,IAAIA,IAAI,CAAC;AACrB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}