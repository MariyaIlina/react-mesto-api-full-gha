{"ast":null,"code":"export var BASE_URL=\"http://localhost:3006\";// function makeRequest(url, method, body, token) {\n//   const headers = {\n//     \"Accept\": \"application/json\",\n//     \"Content-Type\": \"application/json\",\n//   };\n//   if (token !== undefined) {\n//     headers[\"Authorization\"] = `Bearer ${token}`;\n//   }\n//   const config = {\n//     method,\n//     headers,\n//   };\n//   if (body !== undefined) {\n//     config.body = JSON.stringify(body);\n//   }\n//   return fetch(`${BASE_URL}${url}`, config)\n//   .then((res) => {\n//     if (!res.ok) {\n//       return Promise.reject(`Ошибка: ${res.status}`);\n//     }\n//     console.log('res=>!!!', res);\n//     return res.json();\n//   });\n// }\n// export const register = (email, password) => {\n//   return makeRequest(\"/signup\", \"POST\", { email, password } );\n// };\n// export const authorize = (email, password) => {\n//   return makeRequest(\"/signin\", \"POST\", { email, password });\n// };\n// export const checkToken = (token) => {\n//   return makeRequest(\"/users/me\", \"GET\", undefined, token);\n// };\nexport var register=function register(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(function(response){return response.json();}).then(function(res){return res;}).catch(function(err){return console.log(err);});};export var authorize=function authorize(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(function(res){return res.json();}).then(function(data){return data;}).catch(function(err){return console.log(err);});};export var checkToken=function checkToken(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{'Accept':'application/json','Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}}).then(function(res){return res.json();}).then(function(data){return data;});};","map":{"version":3,"names":["BASE_URL","register","email","password","fetch","concat","method","headers","body","JSON","stringify","then","response","json","res","catch","err","console","log","authorize","data","checkToken","token"],"sources":["/Users/mariailina/Documents/Praktikum/react-mesto-api-full-gha/frontend/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = \"http://localhost:3006\";\n\n// function makeRequest(url, method, body, token) {\n//   const headers = {\n//     \"Accept\": \"application/json\",\n//     \"Content-Type\": \"application/json\",\n//   };\n\n//   if (token !== undefined) {\n//     headers[\"Authorization\"] = `Bearer ${token}`;\n//   }\n\n//   const config = {\n//     method,\n//     headers,\n  \n//   };\n\n//   if (body !== undefined) {\n//     config.body = JSON.stringify(body);\n//   }\n//   return fetch(`${BASE_URL}${url}`, config)\n//   .then((res) => {\n//     if (!res.ok) {\n//       return Promise.reject(`Ошибка: ${res.status}`);\n//     }\n//     console.log('res=>!!!', res);\n//     return res.json();\n//   });\n// }\n\n// export const register = (email, password) => {\n//   return makeRequest(\"/signup\", \"POST\", { email, password } );\n// };\n\n// export const authorize = (email, password) => {\n//   return makeRequest(\"/signin\", \"POST\", { email, password });\n// };\n\n// export const checkToken = (token) => {\n//   return makeRequest(\"/users/me\", \"GET\", undefined, token);\n// };\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email, password})\n  })\n  .then((response) => {\n    return response.json();\n  })\n  .then((res) => {\n    return res;\n  })\n  .catch((err) => console.log(err));\n};\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({email, password})\n    })\n    .then(res => res.json())\n    .then(data => data)\n    .catch(err => console.log(err))\n  };\n\n  export const checkToken = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      }\n    })\n    .then(res => res.json())\n    .then(data => data)\n  }\n  \n"],"mappings":"AAAA,MAAO,IAAM,CAAAA,QAAQ,CAAG,uBAAuB,CAE/C;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA,MAAO,IAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAIC,KAAK,CAAEC,QAAQ,CAAK,CAC3C,MAAO,CAAAC,KAAK,IAAAC,MAAA,CAAIL,QAAQ,YAAW,CACjCM,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAACR,KAAK,CAALA,KAAK,CAAEC,QAAQ,CAARA,QAAQ,CAAC,CACxC,CAAC,CAAC,CACDQ,IAAI,CAAC,SAACC,QAAQ,CAAK,CAClB,MAAO,CAAAA,QAAQ,CAACC,IAAI,EAAE,CACxB,CAAC,CAAC,CACDF,IAAI,CAAC,SAACG,GAAG,CAAK,CACb,MAAO,CAAAA,GAAG,CACZ,CAAC,CAAC,CACDC,KAAK,CAAC,SAACC,GAAG,QAAK,CAAAC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,GAAC,CACnC,CAAC,CAED,MAAO,IAAM,CAAAG,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIjB,KAAK,CAAEC,QAAQ,CAAK,CAC1C,MAAO,CAAAC,KAAK,IAAAC,MAAA,CAAIL,QAAQ,YAAW,CACjCM,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAACR,KAAK,CAALA,KAAK,CAAEC,QAAQ,CAARA,QAAQ,CAAC,CACxC,CAAC,CAAC,CACDQ,IAAI,CAAC,SAAAG,GAAG,QAAI,CAAAA,GAAG,CAACD,IAAI,EAAE,GAAC,CACvBF,IAAI,CAAC,SAAAS,IAAI,QAAI,CAAAA,IAAI,GAAC,CAClBL,KAAK,CAAC,SAAAC,GAAG,QAAI,CAAAC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,GAAC,CACjC,CAAC,CAED,MAAO,IAAM,CAAAK,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIC,KAAK,CAAK,CACnC,MAAO,CAAAlB,KAAK,IAAAC,MAAA,CAAIL,QAAQ,cAAa,CACnCM,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBAAkB,CAClC,eAAe,WAAAF,MAAA,CAAYiB,KAAK,CAClC,CACF,CAAC,CAAC,CACDX,IAAI,CAAC,SAAAG,GAAG,QAAI,CAAAA,GAAG,CAACD,IAAI,EAAE,GAAC,CACvBF,IAAI,CAAC,SAAAS,IAAI,QAAI,CAAAA,IAAI,GAAC,CACrB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}