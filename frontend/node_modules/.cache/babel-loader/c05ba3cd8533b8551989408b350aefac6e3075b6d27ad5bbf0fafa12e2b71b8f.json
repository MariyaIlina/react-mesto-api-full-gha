{"ast":null,"code":"class Api {\n  constructor(options) {\n    this.getUserInfo = () => {\n      return fetch(this._baseUrl + \"/users/me\", {\n        headers: this._headers,\n        credentials: 'include'\n      }).then(this._checkResponse);\n    };\n    this.getImages = () => {\n      return fetch(this._baseUrl + \"/cards\", {\n        headers: this.headers,\n        credentials: 'include'\n      }).then(this._checkResponse);\n    };\n    this.addCard = data => {\n      return fetch(this._baseUrl + \"/cards\", {\n        method: \"POST\",\n        headers: this._headers,\n        credentials: 'include',\n        body: JSON.stringify({\n          name: data.name,\n          link: data.link\n        })\n      }).then(this._checkResponse);\n    };\n    this.deleteCard = _id => {\n      return fetch(this._baseUrl + \"/cards/\" + _id, {\n        headers: this._headers,\n        // credentials: 'include',\n\n        method: \"DELETE\"\n      }).then(this._checkResponse);\n    };\n    this.editProfile = data => {\n      return fetch(this._baseUrl + \"/users/me\", {\n        method: \"PATCH\",\n        headers: this._headers,\n        // credentials: 'include',\n\n        body: JSON.stringify({\n          name: data.name,\n          about: data.about\n        })\n      }).then(this._checkResponse);\n    };\n    this.editAvatar = data => {\n      return fetch(this._baseUrl + \"/users/me/avatar\", {\n        method: \"PATCH\",\n        headers: this._headers,\n        // credentials: 'include',\n\n        body: JSON.stringify({\n          avatar: data.avatar\n        })\n      }).then(this._checkResponse);\n    };\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n    this._token = options.token;\n  }\n  _checkResponse(res) {\n    // eslint-disable-next-line no-lone-blocks\n    {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка ${res.status}`);\n    }\n  }\n  putLike(_id) {\n    return fetch(this._baseUrl + \"/cards/likes/\" + _id, {\n      headers: this._headers,\n      // credentials: 'include',\n\n      method: \"PUT\"\n    }).then(this._checkResponse);\n  }\n  deleteLike(_id) {\n    return fetch(this._baseUrl + \"/cards/likes/\" + _id, {\n      headers: this._headers,\n      // credentials: 'include',\n\n      method: \"DELETE\"\n    }).then(this._checkResponse);\n  }\n  changeLikeCardStatus(_id, isLiked) {\n    return fetch(`${this._baseUrl}/cards/${_id}/likes`, {\n      method: `${isLiked ? \"PUT\" : \"DELETE\"}`,\n      headers: this._headers\n      // credentials: 'include',\n    }).then(this._checkResponse);\n  }\n}\nconst api = new Api({\n  baseUrl: \"http://localhost:3006\",\n  // eslint-disable-next-line no-template-curly-in-string\n  // baseToken:'Bearer ${localStorage.getItem(\"jwt\")}',\n  headers: {\n    authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","getUserInfo","fetch","_baseUrl","headers","_headers","credentials","then","_checkResponse","getImages","addCard","data","method","body","JSON","stringify","name","link","deleteCard","_id","editProfile","about","editAvatar","avatar","baseUrl","_token","token","res","ok","json","Promise","reject","status","putLike","deleteLike","changeLikeCardStatus","isLiked","api","authorization","localStorage","getItem"],"sources":["/Users/mariailina/Documents/Praktikum/react-mesto-api-full-gha/frontend/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n    this._token = options.token;\n  }\n\n  _checkResponse(res) {\n    // eslint-disable-next-line no-lone-blocks\n    {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка ${res.status}`);\n    }\n  }\n  getUserInfo = () => {\n    return fetch(this._baseUrl + \"/users/me\", {\n      headers: this._headers,\n      credentials: 'include',\n    }).then(this._checkResponse);\n  };\n\n  getImages = () => {\n    return fetch(this._baseUrl + \"/cards\", {\n      headers: this.headers,\n      credentials: 'include',\n\n    })\n    .then(this._checkResponse);\n  };\n\n  addCard = (data) => {\n    return fetch(this._baseUrl + \"/cards\", {\n      method: \"POST\",\n      headers: this._headers,\n      credentials: 'include',\n\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link,\n      }),\n    })\n    .then(this._checkResponse);\n  };\n\n  deleteCard = (_id) => {\n    return fetch(this._baseUrl + \"/cards/\" + _id, {\n      headers: this._headers,\n      // credentials: 'include',\n\n      method: \"DELETE\",\n    })\n    .then(this._checkResponse);\n  };\n\n  editProfile = (data) => {\n    return fetch(this._baseUrl + \"/users/me\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      // credentials: 'include',\n\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    })\n    .then(this._checkResponse);\n  };\n\n  putLike(_id) {\n    return fetch(this._baseUrl + \"/cards/likes/\" + _id, {\n      headers: this._headers,\n      // credentials: 'include',\n\n      method: \"PUT\",\n    }).then(this._checkResponse);\n  }\n\n  deleteLike(_id) {\n    return fetch(this._baseUrl + \"/cards/likes/\" + _id, {\n      headers: this._headers,\n      // credentials: 'include',\n\n      method: \"DELETE\",\n    })\n    .then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(_id, isLiked) {\n    return fetch(`${this._baseUrl}/cards/${_id}/likes`, {\n      method: `${isLiked ? \"PUT\" : \"DELETE\"}`,\n      headers: this._headers,\n      // credentials: 'include',\n\n    }).then(this._checkResponse);\n  }\n  editAvatar = (data) => {\n    return fetch(this._baseUrl + \"/users/me/avatar\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      // credentials: 'include',\n\n      body: JSON.stringify({\n        avatar: data.avatar,\n      }),\n    }).then(this._checkResponse);\n  };\n}\n\n const api = new Api({\n  baseUrl: \"http://localhost:3006\",\n  // eslint-disable-next-line no-template-curly-in-string\n  // baseToken:'Bearer ${localStorage.getItem(\"jwt\")}',\n  headers: {\n    authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n    \"Content-Type\": \"application/json\",\n    \n  },\n});\nexport default api \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}